snippet bsd3
	/*
	 * Copyright (c) `strftime("%Y")`, ${1:name}. All rights reserved.
	 * Use of this source code is governed by a BSD-3-clause license that can be
	 * found in the LICENSE file or at https://opensource.org/license/BSD-3-Clause
	 */

snippet scast
	static_cast<${1:T}>(${0:${VISUAL:expr}})

snippet cfoff
	// clang-format off
	${0:${VISUAL}}
	// clang-format on

snippet incguard
	#ifndef ${1:macro}
	#define $1

	${0:${VISUAL}}

	#endif /* $1 */

snippet externc
	#ifdef __cplusplus
	extern "C" {
	#endif /* __cplusplus */

	${0:${VISUAL}}

	#ifdef __cplusplus
	} /* extern "C" */
	#endif /* __cplusplus */

snippet copydecls
	${1:ClassName}(const $1& other);
	$1& operator=(const $1& rhs);

snippet nocopy
	${1:ClassName}(const $1&) = delete;
	$1& operator=(const $1&) = delete;

snippet movedecls
	${1:ClassName}($1&& other) noexcept;
	$1& operator=($1&& rhs) noexcept;

snippet nomove
	${1:ClassName}($1&&) = delete;
	$1& operator=($1&&) = delete;

snippet classdecl
	class ${1:ClassName} {
	 public:
		$1();

		$1(const $1& other);
		$1& operator=(const $1 rhs);

		$1($1&& other) noexcept;
		$1& operator=($1&& other) noexcept;

		~$1();
	};

snippet accessors
	${1:T} Get${2:Title}() const { return ${3:var}; }
	void Set$2($1 ${4:val}) { $3 = $4; }

# vim: set noet ts=2:

